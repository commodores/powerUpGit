// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6919.powerUp.subsystems;

import org.usfirst.frc6919.powerUp.RobotMap;
import org.usfirst.frc6919.powerUp.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class intake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Servo rightRaiseServo = RobotMap.intakerightRaiseServo;
    private final Servo leftRaiseServo = RobotMap.intakeleftRaiseServo;
    private final Servo clampServo = RobotMap.intakeclampServo;
    private final SpeedController leftIntakeMotor = RobotMap.intakeleftIntakeMotor;
    private final SpeedController rightIntakeMotor = RobotMap.intakerightIntakeMotor;
    private final SpeedControllerGroup intakeMotors = RobotMap.intakeintakeMotors;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    public void intakeIn() {
    	intakeMotors.set(1);
    }
    
    public void intakeOut() {
    	intakeMotors.set(-.5);
    }
    
    public void intakeStop() {
    	intakeMotors.stopMotor();
    }
    
    public void intakeOpen() {
    	clampServo.set(1.0);
    }
    
    public void intakeClose() {
    	clampServo.set(0.0);
    }
    
    public void intakeUp() {
    	rightRaiseServo.set(0.0);
    	leftRaiseServo.set(0.0);
    }
    
    public void intakeDown() {
    	rightRaiseServo.set(1.0);
    	leftRaiseServo.set(1.0);
    }    
    
}

